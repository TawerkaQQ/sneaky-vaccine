
services:
  triton:
    container_name: triton
    image: nvcr.io/nvidia/tritonserver:24.09-py3
    ports:
      - 8000:8000  # HTTP endpoint for inference
      - 8001:8001  # GRPC endpoint for inference
      - 8002:8002  # Metrics endpoint for Prometheus
    restart: always
    volumes:
      - ./triton/models:/models
    command: ["tritonserver", "--model-store=/models"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1

#  trtexec_container:
#    container_name: trtexec_container
#    image: nvcr.io/nvidia/tensorrt:24.09-py3
#    volumes:
#      - ./trtexec_workspace:/workspace
#    command: ["tail", "-f", "/dev/null"]
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              capabilities: [gpu]
#              count: 1
#
#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus:latest
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    restart: always
#
#  grafana:
#    container_name: grafana
#    image: grafana/grafana:latest
#    ports:
#      - 3000:3000
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    restart: always